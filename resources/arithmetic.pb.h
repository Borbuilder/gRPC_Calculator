// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: arithmetic.proto
// Protobuf C++ Version: 5.29.3

#ifndef arithmetic_2eproto_2epb_2eh
#define arithmetic_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_arithmetic_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_arithmetic_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_arithmetic_2eproto;
namespace arithmetics {
class OperationRequest;
struct OperationRequestDefaultTypeInternal;
extern OperationRequestDefaultTypeInternal _OperationRequest_default_instance_;
class OperationResponse;
struct OperationResponseDefaultTypeInternal;
extern OperationResponseDefaultTypeInternal _OperationResponse_default_instance_;
}  // namespace arithmetics
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace arithmetics {
enum OperationRequest_Operation : int {
  OperationRequest_Operation_ADD = 0,
  OperationRequest_Operation_SUBSTRACT = 1,
  OperationRequest_Operation_MULTIPLY = 2,
  OperationRequest_Operation_DIVIDE = 3,
  OperationRequest_Operation_OperationRequest_Operation_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OperationRequest_Operation_OperationRequest_Operation_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OperationRequest_Operation_IsValid(int value);
extern const uint32_t OperationRequest_Operation_internal_data_[];
constexpr OperationRequest_Operation OperationRequest_Operation_Operation_MIN = static_cast<OperationRequest_Operation>(0);
constexpr OperationRequest_Operation OperationRequest_Operation_Operation_MAX = static_cast<OperationRequest_Operation>(3);
constexpr int OperationRequest_Operation_Operation_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OperationRequest_Operation_descriptor();
template <typename T>
const std::string& OperationRequest_Operation_Name(T value) {
  static_assert(std::is_same<T, OperationRequest_Operation>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Operation_Name().");
  return OperationRequest_Operation_Name(static_cast<OperationRequest_Operation>(value));
}
template <>
inline const std::string& OperationRequest_Operation_Name(OperationRequest_Operation value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OperationRequest_Operation_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OperationRequest_Operation_Parse(absl::string_view name, OperationRequest_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationRequest_Operation>(
      OperationRequest_Operation_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OperationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arithmetics.OperationResponse) */ {
 public:
  inline OperationResponse() : OperationResponse(nullptr) {}
  ~OperationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OperationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OperationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OperationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline OperationResponse(const OperationResponse& from) : OperationResponse(nullptr, from) {}
  inline OperationResponse(OperationResponse&& from) noexcept
      : OperationResponse(nullptr, std::move(from)) {}
  inline OperationResponse& operator=(const OperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperationResponse& operator=(OperationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperationResponse* internal_default_instance() {
    return reinterpret_cast<const OperationResponse*>(
        &_OperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OperationResponse& a, OperationResponse& b) { a.Swap(&b); }
  inline void Swap(OperationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OperationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OperationResponse& from) { OperationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OperationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arithmetics.OperationResponse"; }

 protected:
  explicit OperationResponse(::google::protobuf::Arena* arena);
  OperationResponse(::google::protobuf::Arena* arena, const OperationResponse& from);
  OperationResponse(::google::protobuf::Arena* arena, OperationResponse&& from) noexcept
      : OperationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // string error = 2;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // double result = 1;
  void clear_result() ;
  double result() const;
  void set_result(double value);

  private:
  double _internal_result() const;
  void _internal_set_result(double value);

  public:
  // @@protoc_insertion_point(class_scope:arithmetics.OperationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OperationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_;
    double result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arithmetic_2eproto;
};
// -------------------------------------------------------------------

class OperationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:arithmetics.OperationRequest) */ {
 public:
  inline OperationRequest() : OperationRequest(nullptr) {}
  ~OperationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OperationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OperationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OperationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline OperationRequest(const OperationRequest& from) : OperationRequest(nullptr, from) {}
  inline OperationRequest(OperationRequest&& from) noexcept
      : OperationRequest(nullptr, std::move(from)) {}
  inline OperationRequest& operator=(const OperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperationRequest& operator=(OperationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperationRequest* internal_default_instance() {
    return reinterpret_cast<const OperationRequest*>(
        &_OperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OperationRequest& a, OperationRequest& b) { a.Swap(&b); }
  inline void Swap(OperationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OperationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OperationRequest& from) { OperationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OperationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "arithmetics.OperationRequest"; }

 protected:
  explicit OperationRequest(::google::protobuf::Arena* arena);
  OperationRequest(::google::protobuf::Arena* arena, const OperationRequest& from);
  OperationRequest(::google::protobuf::Arena* arena, OperationRequest&& from) noexcept
      : OperationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Operation = OperationRequest_Operation;
  static constexpr Operation ADD = OperationRequest_Operation_ADD;
  static constexpr Operation SUBSTRACT = OperationRequest_Operation_SUBSTRACT;
  static constexpr Operation MULTIPLY = OperationRequest_Operation_MULTIPLY;
  static constexpr Operation DIVIDE = OperationRequest_Operation_DIVIDE;
  static inline bool Operation_IsValid(int value) {
    return OperationRequest_Operation_IsValid(value);
  }
  static constexpr Operation Operation_MIN = OperationRequest_Operation_Operation_MIN;
  static constexpr Operation Operation_MAX = OperationRequest_Operation_Operation_MAX;
  static constexpr int Operation_ARRAYSIZE = OperationRequest_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Operation_descriptor() {
    return OperationRequest_Operation_descriptor();
  }
  template <typename T>
  static inline const std::string& Operation_Name(T value) {
    return OperationRequest_Operation_Name(value);
  }
  static inline bool Operation_Parse(absl::string_view name, Operation* value) {
    return OperationRequest_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kAFieldNumber = 1,
    kBFieldNumber = 2,
    kOpFieldNumber = 3,
  };
  // double a = 1;
  void clear_a() ;
  double a() const;
  void set_a(double value);

  private:
  double _internal_a() const;
  void _internal_set_a(double value);

  public:
  // double b = 2;
  void clear_b() ;
  double b() const;
  void set_b(double value);

  private:
  double _internal_b() const;
  void _internal_set_b(double value);

  public:
  // .arithmetics.OperationRequest.Operation op = 3;
  void clear_op() ;
  ::arithmetics::OperationRequest_Operation op() const;
  void set_op(::arithmetics::OperationRequest_Operation value);

  private:
  ::arithmetics::OperationRequest_Operation _internal_op() const;
  void _internal_set_op(::arithmetics::OperationRequest_Operation value);

  public:
  // @@protoc_insertion_point(class_scope:arithmetics.OperationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OperationRequest& from_msg);
    double a_;
    double b_;
    int op_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arithmetic_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OperationRequest

// double a = 1;
inline void OperationRequest::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
}
inline double OperationRequest::a() const {
  // @@protoc_insertion_point(field_get:arithmetics.OperationRequest.a)
  return _internal_a();
}
inline void OperationRequest::set_a(double value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:arithmetics.OperationRequest.a)
}
inline double OperationRequest::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void OperationRequest::_internal_set_a(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// double b = 2;
inline void OperationRequest::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
}
inline double OperationRequest::b() const {
  // @@protoc_insertion_point(field_get:arithmetics.OperationRequest.b)
  return _internal_b();
}
inline void OperationRequest::set_b(double value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:arithmetics.OperationRequest.b)
}
inline double OperationRequest::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void OperationRequest::_internal_set_b(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// .arithmetics.OperationRequest.Operation op = 3;
inline void OperationRequest::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = 0;
}
inline ::arithmetics::OperationRequest_Operation OperationRequest::op() const {
  // @@protoc_insertion_point(field_get:arithmetics.OperationRequest.op)
  return _internal_op();
}
inline void OperationRequest::set_op(::arithmetics::OperationRequest_Operation value) {
  _internal_set_op(value);
  // @@protoc_insertion_point(field_set:arithmetics.OperationRequest.op)
}
inline ::arithmetics::OperationRequest_Operation OperationRequest::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::arithmetics::OperationRequest_Operation>(_impl_.op_);
}
inline void OperationRequest::_internal_set_op(::arithmetics::OperationRequest_Operation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = value;
}

// -------------------------------------------------------------------

// OperationResponse

// double result = 1;
inline void OperationResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline double OperationResponse::result() const {
  // @@protoc_insertion_point(field_get:arithmetics.OperationResponse.result)
  return _internal_result();
}
inline void OperationResponse::set_result(double value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:arithmetics.OperationResponse.result)
}
inline double OperationResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void OperationResponse::_internal_set_result(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// string error = 2;
inline void OperationResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& OperationResponse::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:arithmetics.OperationResponse.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperationResponse::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:arithmetics.OperationResponse.error)
}
inline std::string* OperationResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:arithmetics.OperationResponse.error)
  return _s;
}
inline const std::string& OperationResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void OperationResponse::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* OperationResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* OperationResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:arithmetics.OperationResponse.error)
  return _impl_.error_.Release();
}
inline void OperationResponse::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_.IsDefault()) {
    _impl_.error_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:arithmetics.OperationResponse.error)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace arithmetics


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::arithmetics::OperationRequest_Operation> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::arithmetics::OperationRequest_Operation>() {
  return ::arithmetics::OperationRequest_Operation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // arithmetic_2eproto_2epb_2eh
